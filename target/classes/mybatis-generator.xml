<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE generatorConfiguration
        PUBLIC "-//mybatis.org//DTD MyBatis Generator Configuration 1.0//EN"
        "http://mybatis.org/dtd/mybatis-generator-config_1_0.dtd">

<generatorConfiguration>

    <!-- context 是逆向工程的主要配置信息 -->
    <!-- id：起个名字 -->
    <!-- targetRuntime：设置生成的文件适用于那个 mybatis 版本 -->
    <context id="default" targetRuntime="MyBatis3">


        <!--jdbc的数据库连接-->
        <!--这里是以变量的形式定义，具体的值在 application.properties 文件中-->
        <!--jdbc:mysql://1.116.237.91:3306/数据库名?useUnicode=true&characterEncoding=UTF-8&serverTimezone=UTC-->
        <!-- 您需要修改数据库名称和密码 -->
        <jdbcConnection driverClass="com.mysql.cj.jdbc.Driver"
                        connectionURL="jdbc:mysql://127.0.0.1:3306/miaosha?serverTimezone=UTC"
                        userId="root"
                        password="738258">
        </jdbcConnection>

        <!-- targetPackage：生成的实体类所在的包 -->
        <!-- targetProject：生成的实体类所在的硬盘位置 -->
        <!-- DataObject 类存放位置 -->
        <javaModelGenerator targetPackage="com.lw.dataObject"
                            targetProject="src/main/java">
            <!-- 是否允许子包 -->
            <property name="enableSubPackages" value="true"/>
            <!-- 是否对modal添加构造函数 -->
            <!--            <property name="constructorBased" value="true" />-->
            <!-- 是否清理从数据库中查询出的字符串左右两边的空白字符 -->
            <property name="trimStrings" value="true"/>
            <!-- 建立modal对象是否不可改变 即生成的modal对象不会有setter方法，只有构造方法 -->
            <!--<property name="immutable" value="false"/>-->
        </javaModelGenerator>

        <!-- targetPackage 和 targetProject：生成的 mapper 文件的包和位置 -->
        <sqlMapGenerator targetPackage="mapping"
                         targetProject="src/main/resources">
            <!-- 针对数据库的一个配置，是否把 schema 作为字包名 -->
            <property name="enableSubPackages" value="true"/>
        </sqlMapGenerator>

        <!--生成Dao类存放位置-->
        <!--
            客户端代码,生成易于使用的针对Model对象和XML配置文件的代码
            type= "ANNOTATEDMAPPER' ,生成Java Model和基于注解的Mapper对象
            type=" MIXEDMAPPER",生成基于注解的Java Model和相应的Mapper对象
            type="XMLMAPPER"生成SQLMap XML文件和独立的Mapper接口
        -->
        <!-- targetPackage 和 targetProject：生成的 interface 文件的包和位置 -->
        <javaClientGenerator type="XMLMAPPER"
                             targetPackage="com.lw.dao" targetProject="src/main/java">
            <!-- 针对 oracle 数据库的一个配置，是否把 schema 作为字包名 -->
            <property name="enableSubPackages" value="true"/>
        </javaClientGenerator>

        <!--生成对应表及类名-->
        <!--
               enableCountByExample="false"
               enableUpdateByExample="false" enableDeleteByExample="false"
               enableSelectByExample="false" selectByExampleQueryId="false"
               取消 UserDOMapper.xml(例子) 中的一些复杂查询, 实际开发中不会这么用.
               然后 手动删除 UserDOExample.java(例子) 等文件
        -->

        <!--  正常做法: 需要生成那几张表 就写那几张, 多余的 注释 或者删掉, 以免不小心覆盖? -->
        <!--        平时注释掉, 会随着maven install 运行一遍-->

        <!--<table tableName="user_info" domainObjectName="UserDao" enableCountByExample="false"-->
        <!--       enableUpdateByExample="false" enableDeleteByExample="false"-->
        <!--       enableSelectByExample="false" selectByExampleQueryId="false"></table>-->
        <!--<table tableName="user_password" domainObjectName="UserPasswordDao" enableCountByExample="false"-->
        <!--       enableUpdateByExample="false" enableDeleteByExample="false"-->
        <!--       enableSelectByExample="false" selectByExampleQueryId="false"></table>-->

        <!--<table tableName="item" domainObjectName="ItemDao" enableCountByExample="false"-->
        <!--       enableUpdateByExample="false" enableDeleteByExample="false"-->
        <!--       enableSelectByExample="false" selectByExampleQueryId="false"></table>-->
        <!--<table tableName="item_stock" domainObjectName="ItemStockDao" enableCountByExample="false"-->
        <!--       enableUpdateByExample="false" enableDeleteByExample="false"-->
        <!--       enableSelectByExample="false" selectByExampleQueryId="false"></table>-->

        <!--<table tableName="order_info" domainObjectName="OrderDao" enableCountByExample="false"-->
        <!--       enableUpdateByExample="false" enableDeleteByExample="false"-->
        <!--       enableSelectByExample="false" selectByExampleQueryId="false"></table>-->

        <!--<table tableName="sequence_info" domainObjectName="SequenceDao" enableCountByExample="false"-->
        <!--       enableUpdateByExample="false" enableDeleteByExample="false"-->
        <!--       enableSelectByExample="false" selectByExampleQueryId="false"></table>-->

        <!--<table tableName="promo" domainObjectName="PromoDao" enableCountByExample="false"-->
        <!--       enableUpdateByExample="false" enableDeleteByExample="false"-->
        <!--       enableSelectByExample="false" selectByExampleQueryId="false"></table>-->
    </context>
<!--    使用  Maven ↓
name: mybatis-generator
Working directory:  D:/00Code/0java/miaosha
Command line:   mybatis-generator.generate
-->
</generatorConfiguration>


